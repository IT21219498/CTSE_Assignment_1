name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build and Test Services
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install --prefix ./user-service

      - name: Skip Tests
        run: echo "No tests available. Skipping test step."

  docker-build-and-push:
    name: Build and Push Docker Images to Artifact Registry
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build and Push Docker Images
        run: |
          for SERVICE in gateway user-service course-service learner-service payment-service notification-service frontend; do
            IMAGE=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/$SERVICE
            docker build -t $IMAGE ./$SERVICE
            docker push $IMAGE
          done

  deploy-to-cloudrun:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy Gateway
        run: |
          gcloud run deploy gateway \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/gateway \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "GATEWAY_PORT=8000,COURSE_SERVICE_URL=http://course-service:8001,USER_SERVICE_URL=http://user-service:8002,LEARNING_SERVICE_URL=http://learner-service:8003,PAYMENT_SERVICE_URL=http://payment-service:8004,NOTIFICATION_SERVICE_URL=http://notification-service:8005"

      - name: Deploy User Service
        run: |
          gcloud run deploy user-service \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/user-service \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "USER_SERVICE_PORT=8002,JWT_SECRET=${{ secrets.JWT_SECRET }},CONNECTION_STRING=${{ secrets.DB_URL }}"

      - name: Deploy Course Service
        run: |
          gcloud run deploy course-service \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/course-service \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "COURSE_SERVICE_PORT=8001,CONNECTION_STRING=${{ secrets.DB_URL }},CLOUDINARY_NAME=diiyul5rg,CLOUDINARY_API_KEY=811621628529636,CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }},CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }},USER_SERVICE_URL=http://localhost:8002,NOTIFICATION_SERVICE_URL=http://localhost:8003"

      - name: Deploy Learner Service
        run: |
          gcloud run deploy learner-service \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/learner-service \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "LEARNING_SERVICE_PORT=8003,CONNECTION_STRING=${{ secrets.DB_URL }},COURSE_SERVICE_URL=http://localhost:8001,USER_SERVICE_URL=http://localhost:8002"

      - name: Deploy Payment Service
        run: |
          gcloud run deploy payment-service \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/payment-service \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "PAYMENT_SERVICE_PORT=8004,STRIPE_KEY=${{ secrets.STRIPE_KEY }}"

      - name: Deploy Notification Service
        run: |
          gcloud run deploy notification-service \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/notification-service \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "NOTIFICATION_SERVICE_PORT=8005,USER=${{ secrets.EMAIL_USER }},PASSWORD=${{ secrets.EMAIL_PASSWORD }}"

      - name: Deploy Frontend
        run: |
          gcloud run deploy frontend \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/frontend \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated
